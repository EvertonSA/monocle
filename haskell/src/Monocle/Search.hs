{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# OPTIONS_GHC -fno-warn-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Monocle.Search where

import Control.Applicative ((<$>), (<*>), (<|>))
import qualified Control.Applicative as Hs
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty (..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import Proto3.Suite.JSONPB ((.:), (.=))
import qualified Proto3.Suite.JSONPB as HsJSONPB
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Unsafe.Coerce as Hs
import qualified Prelude as Hs

newtype SearchSuggestionsRequest = SearchSuggestionsRequest
  { searchSuggestionsRequestIndex ::
      Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SearchSuggestionsRequest where
  nameOf _ = (Hs.fromString "SearchSuggestionsRequest")

instance HsProtobuf.HasDefault SearchSuggestionsRequest

instance HsProtobuf.Message SearchSuggestionsRequest where
  encodeMessage
    _
    SearchSuggestionsRequest
      { searchSuggestionsRequestIndex =
          searchSuggestionsRequestIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                searchSuggestionsRequestIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SearchSuggestionsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SearchSuggestionsRequest where
  toJSONPB (SearchSuggestionsRequest f1) =
    (HsJSONPB.object ["index" .= f1])
  toEncodingPB (SearchSuggestionsRequest f1) =
    (HsJSONPB.pairs ["index" .= f1])

instance HsJSONPB.FromJSONPB SearchSuggestionsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SearchSuggestionsRequest"
        (\obj -> (Hs.pure SearchSuggestionsRequest) <*> obj .: "index")
    )

instance HsJSONPB.ToJSON SearchSuggestionsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SearchSuggestionsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SearchSuggestionsRequest where
  declareNamedSchema _ =
    do
      let declare_index = HsJSONPB.declareSchemaRef
      searchSuggestionsRequestIndex <- declare_index Proxy.Proxy
      let _ =
            Hs.pure SearchSuggestionsRequest
              <*> HsJSONPB.asProxy declare_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SearchSuggestionsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("index", searchSuggestionsRequestIndex)]
                  }
            }
        )

data SearchSuggestionsResponse = SearchSuggestionsResponse
  { searchSuggestionsResponseTaskTypes ::
      Hs.Vector Hs.Text,
    searchSuggestionsResponseAuthors ::
      Hs.Vector Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SearchSuggestionsResponse where
  nameOf _ = (Hs.fromString "SearchSuggestionsResponse")

instance HsProtobuf.HasDefault SearchSuggestionsResponse

instance HsProtobuf.Message SearchSuggestionsResponse where
  encodeMessage
    _
    SearchSuggestionsResponse
      { searchSuggestionsResponseTaskTypes =
          searchSuggestionsResponseTaskTypes,
        searchSuggestionsResponseAuthors =
          searchSuggestionsResponseAuthors
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponseTaskTypes
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponseAuthors
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SearchSuggestionsResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "task_types")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "authors")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SearchSuggestionsResponse where
  toJSONPB (SearchSuggestionsResponse f1 f2) =
    (HsJSONPB.object ["task_types" .= f1, "authors" .= f2])
  toEncodingPB (SearchSuggestionsResponse f1 f2) =
    (HsJSONPB.pairs ["task_types" .= f1, "authors" .= f2])

instance HsJSONPB.FromJSONPB SearchSuggestionsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SearchSuggestionsResponse"
        ( \obj ->
            (Hs.pure SearchSuggestionsResponse) <*> obj .: "task_types"
              <*> obj .: "authors"
        )
    )

instance HsJSONPB.ToJSON SearchSuggestionsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SearchSuggestionsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SearchSuggestionsResponse where
  declareNamedSchema _ =
    do
      let declare_task_types = HsJSONPB.declareSchemaRef
      searchSuggestionsResponseTaskTypes <-
        declare_task_types
          Proxy.Proxy
      let declare_authors = HsJSONPB.declareSchemaRef
      searchSuggestionsResponseAuthors <- declare_authors Proxy.Proxy
      let _ =
            Hs.pure SearchSuggestionsResponse
              <*> HsJSONPB.asProxy declare_task_types
              <*> HsJSONPB.asProxy declare_authors
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SearchSuggestionsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "task_types",
                            searchSuggestionsResponseTaskTypes
                          ),
                          ( "authors",
                            searchSuggestionsResponseAuthors
                          )
                        ]
                  }
            }
        )
